---
title: "Brand Reviews"
format: 
  dashboard:
    orientation: columns
    nav-buttons: [github]
    github: https://github.com/NicolaRizzitello/dash_brand
    theme: 
      - sketchy
      - dashstyle.scss
logo: images/tecnology.jpg
logo-alt: Logo with many devices.
---

```{r}
#| label: load-packages
#| message: false
library(paletteer)
library(tidyverse)
library(readxl)
library(lubridate)
library(kableExtra)
library(sqldf)
library(scales)
library(DT)
library(plotly)
library(gt)
#library(ggiraph)
library(showtext)
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
font_add_google("Montserrat")
showtext_auto()
```

```{r}
#| title: load-data
#| message: false

items<-read.csv("items.csv", h=T, stringsAsFactors = FALSE)
reviews<-read.csv("reviews.csv", h=T, stringsAsFactors = FALSE)


df<-items%>%
  inner_join(reviews, c("asin"="asin"))
df <- subset(df, select = -c(url, image, reviewUrl))
```

#  {.sidebar}

This dashboard displays statistics for brand's reviews, rate and prices. This dataset is composed by 82815 observations and 9 columns:

| Column name       | Description                         |
|-------------------|-------------------------------------|
| **Asin**          | Unique ID                           |
| **Brand**         | Brand Device                        |
| **Rating**        | Average device rate                 |
| **Title**         | Device Name                         |
| **Total Reviews** | Total of reviews about that device  |
| **Prices**        | Device price                        |
| **Date**          | Date reviews                        |
| **Body**          | Content review                      |
| **Name**          | Name of person who wrote the review |

# 📁Data

```{r}
df_sub<-df %>% 
  select(brand, totalReviews, name,prices, date, rating.y)
df_sub %>% 
  datatable(
    colnames = c("Brand", "Total Reviews", "Name", "Prices", "Date", "Votes"),
    options = list(dom = 'ftp', paging = TRUE)
    )
```

# 📱Brand Reviews and Rate

## Column - Plots {height="50%"}

### Reviews Brand Devices Percentage

::: {.card title="Reviews Brand Devices Percentage"}
```{r}
#| label: Reviews Brand Devices Percentage
#| fig-asp: 2
#| fig-width: 14
n <- length(df$brand)##DIMENSIONE VARIABILE BRAND
brand<-df%>%
  group_by(brand)%>%
  summarise(n=(n()/n))##CALCOLO DISTRIBUZIONE DI FREQUENZA RELATIVA

p_1 <- ggplot(brand, aes(x = reorder(brand, -n), y=n, fill=brand))

p_1 <- p_1 + geom_bar(stat = "identity") +
  #labs(title = "Brand Devices Percentage")+ 
  ylab("Percentage")+
  xlab("Brands") + scale_x_discrete(guide = guide_axis(angle = 45)) + 
  scale_fill_brewer(palette = "Paired",name = "Brand") + scale_y_continuous(labels = scales::percent) + theme_minimal()+theme(text=element_text(size=10,face = "bold",family="Montserrat"))+theme(legend.position="none")

ggplotly(p_1)

```
:::

### Brand Devices Rates {height="50%"}

```{r}
#| title: Brand Devices Rates
#| fig-asp: 2
#| fig-width: 14
p_2 <- ggplot(data = df) +
  geom_boxplot(aes(x=brand,y=rating.x, fill = brand)) + 
  #labs(title = "Brand Devices Rates")+    
  ylab("Rate")+
  xlab("Brands") + 
  scale_x_discrete(guide = guide_axis(angle = 45)) + 
  scale_fill_brewer(palette = "Paired") + theme_minimal()+theme(text=element_text(size=10,face =     "bold",family="Montserrat"))+theme(legend.position="none")
ggplotly(p_2)

```

## Value Boxes {width="35%"}

### Row - Value boxes {height="30%"}

```{r}
#| label: brand-with-most-reviews
brand_most_rev<-df %>% group_by(brand) %>%
    summarise(n = n()) %>% 
    filter(n == max(n))

device_most_rev<-df %>% group_by(title.x) %>%
    summarise(n = n()) %>% 
    filter(n == max(n))

device_most_rev[c('Title', 'X')] <- str_split_fixed(device_most_rev$title.x, ',', 2)


brand_best_rate<-df %>% group_by(brand) %>%
    summarise(n = mean(rating.x)) %>% 
    filter(n == max(n))


    
```

::: {.valuebox icon="award-fill" color="#FF7F00"}
Most Brand Reviews:

`{r} brand_most_rev$n`

`{r} brand_most_rev$brand`
:::

::: {.valuebox icon="award-fill" color="#B2DF8A"}
Most Device Reviews:

`{r} device_most_rev$n`

`{r} device_most_rev$Title`
:::

::: {.valuebox icon="award-fill" color="#6A3D9A"}
Mean High Brand Rate:

`{r} round(brand_best_rate$n,2)`

`{r} brand_best_rate$brand`
:::

### Row - Tabsets of tables {.tabset height="70%"}

::: {.card title="Reviews by Brand"}
Brands sorted in descending order of total reviews.

```{r}

#| label: percentage-reviews-by-brand

n <- length(df$brand)##DIMENSIONE VARIABILE BRAND
brand<-df%>%
  group_by(brand)%>%
  summarise(n=(n()/n)*100) %>%  ##CALCOLO DISTRIBUZIONE DI FREQUENZA RELATIVA
  arrange(desc(n))

colnames(brand) <- c("Brand", "Perc")
brand$Perc <- round(brand$Perc,2)

# brand<-brand %>% 
#   gt() %>% 
#   cols_align(align = "left", column = "Brand") %>% 
#   data_color(
#     method = "numeric",
#     palette = "nord::aurora"
#   )
# brand
#

#

datatable(brand, filter="none", selection="multiple",escape=FALSE, options = list(dom = 'ltipr')) 
```
:::

::: {.card title="Rate by Brand"}
Brands sorted in descending order of best mean rate.

```{r}
#| label: rate-by-brand

brand_rat<-df%>%
  group_by(brand)%>%
  summarise(n_r = round(mean(rating.x),2)) %>% 
  arrange(desc(n_r))

colnames(brand_rat) <- c("Brand", "Rate")
# brand_rat<-brand_rat %>% 
#   gt() %>% 
#   cols_align(align = "left", column = "Brand") %>% 
#   data_color(
#     method = "numeric",
#     palette = "nord::aurora"
#   )
# brand_rat

datatable(brand_rat, filter="none", selection="multiple",escape=FALSE, options = list(dom = 'ltipr'))
```
:::

# 💰Price Brand Distribution

## Column - Plots {height="50%"}

### Prices by brand distribution

```{r}
#| label: price-by-brand
#| title: Distribution of prices by brand
#| fig-asp: 2 
#| fig-width: 14
df$prices<-gsub("^.{0,1}","",df$prices)###ELIMINO SIMBOLO DOLLARO DALLA VARIABILE PRICES
df$prices<- as.numeric(df$prices)###TRASFORMO LA VARIABILE PRICES IN NUMERIC 

p_4<-ggplot(data = df)  + 
  geom_boxplot(aes(x = brand , y = prices, fill = brand))  + 
  labs(x="Brand", y="Price")+
  scale_x_discrete(guide = guide_axis(angle = 45)) + 
  scale_fill_brewer(palette = "Paired") + theme_minimal()+theme(text=element_text(size=10,family="Montserrat", face = "bold"))+theme(legend.position="none")###RAPPRESENTAZIONE GRAFICA DEI PREZZI PER BRAND

ggplotly(p_4)

```

### Column {height="50%"}

::: {.card title="Price by Brand over Year"}
For some brand there are not data about price from 2014

```{r}
#| label: price-by-brand-year
#| fig-asp: 1
#| fig-width: 10
options(scipen=999)
df$date<-mdy(df$date)###TRASFORMAZIONE VARIABILE DATA

df<-mutate(df, year = year(date))###CREAZIONE VARIBILE YEAR

d_b_r<-df%>%
  select(year,brand,prices)%>%
  filter(year>="2014")###SELZIONI LE VARIBILI NECESSARIE PER L'ANALISI E FILTRO RISPETTO AL 2014

d_b_r<-d_b_r%>%
  group_by(year,brand)%>%
  summarise(mean_price=mean(prices,na.rm = TRUE))##CALCOLO TOTALE DELLE REVIEWS PER ANNO E PER BRAND

p_5<-d_b_r %>% ggplot()+
  geom_line(mapping = aes(x=year,y=mean_price, color = brand) )+
  scale_color_manual(values = c("#A6CEE3" ,"#1F78B4" ,"#B2DF8A" ,"#33A02C" ,"#FB9A99" ,"#E31A1C", "#FDBF6F","#FF7F00" ,"#CAB2D6","#6A3D9A")) +
  labs(x="Year", y = "Totale review")+
  theme_minimal()+theme(text=element_text(face =     "bold",family="Montserrat"))+theme(legend.position="bottom")

ggplotly(p_5) 
```
:::

## Value Boxes {width="35%"}

### Row - Value boxes {height="30%"}

```{r}
#| label: brand-with-high-price
brand_most_price<-df %>% group_by(brand) %>%
    summarise(n = max(prices,na.rm = TRUE)) %>% 
    filter(n==max(n))

device_most_price<-df %>% group_by(title.x) %>%
    summarise(n = max(prices)) %>% 
    filter(n == max(n,na.rm = TRUE))
device_most_price$Title <- "Apple iPhone XS Max"


brand_ch_price<-df %>% group_by(brand) %>%
    summarise(n = min(prices,na.rm = TRUE)) %>% 
    filter(n==min(n))

device_ch_price<-df %>% group_by(title.x) %>%
    summarise(n = min(prices)) %>% 
    filter(n == min(n,na.rm = TRUE))
device_ch_price$Title <- "Modem 3G GSM Huawei"

    
```

::: {.valuebox icon="award-fill" color="#A6CEE3"}
Higher Price Device:

`{r} brand_most_price$n` €

`{r} device_most_price$Title`
:::

::: {.valuebox icon="award-fill" color="#33A02C"}
Cheaper Price Device:

`{r} device_ch_price$n` €

`{r} device_ch_price$Title`
:::

### Row - Tabsets of tables {.tabset height="70%"}

::: {.card title="Higher Price by Brand"}
```{r}

#| label: price-high-by-brand

brand_most_price<-df %>% group_by(brand) %>%
    summarise(n = max(prices,na.rm = TRUE))

colnames(brand_most_price) <- c("Brand", "High Price")


datatable(brand_most_price, filter="none", selection="multiple",escape=FALSE, options = list(dom = 'ltipr')) 
```
:::

::: {.card title="Cheaper Price by Brand"}
```{r}
#| label: price-cheap-by-brand

brand_ch_price<-df %>% group_by(brand) %>%
    summarise(n = min(prices,na.rm = TRUE))

colnames(brand_ch_price) <- c("Brand", "Cheap Price")


datatable(brand_ch_price, filter="none", selection="multiple",escape=FALSE, options = list(dom = 'ltipr'))
```
:::
